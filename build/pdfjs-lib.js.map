{"version":3,"sources":["webpack://pdf-viewer/webpack/universalModuleDefinition","webpack://pdf-viewer/external \"pdfjsLib\"","webpack://pdf-viewer/external \"pdfjsViewer\"","webpack://pdf-viewer/webpack/bootstrap","webpack://pdf-viewer/webpack/runtime/make namespace object","webpack://pdf-viewer/./src/lib/pdfjs-lib-facade.js"],"names":["docPromises","PDFJsFacade","pdfjsLib","AnnotationLayerBuilder","DefaultTextLayerFactory","TextLayerBuilder","params","PDFPageView","url","Error","createDocLoadingTask","onPassword","onProgress","getParams","Promise","resolve","reject","console","log","indexOf","loadingTask","promise","then","pdfDoc","err","error","window","rtPDFJsLib"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;ACVA,kD;;;;;;;ACAA,kD;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAEA,IAAMA,WAAW,GAAG,EAApB;AAEO,IAAMC,WAAb;AAAA;;AAAA;;AAAA,+BACQC,kBADR;;AAAA,kCAEW;AACPC,0BAAsB,EAAtBA,4CADO;AAEPC,2BAAuB,EAAvBA,6CAFO;AAGPC,oBAAgB,EAAhBA,sCAAgBA;AAHT,GAFX;;AAAA,6CAQsB,YAAiB;AAAA,QAAhBC,MAAgB,uEAAP,EAAO;AACnC,WAAO,IAAIC,iCAAJ,CAAgBD,MAAhB,CAAP;AACD,GAVH;;AAAA,uCAiBgB,YAAiB;AAAA,QAAhBA,MAAgB,uEAAP,EAAO;;AAC7B,QAAIA,MAAM,CAACE,GAAP,IAAc,IAAlB,EAAwB;AACtB,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD,KAFD,MAEO,IAAI,CAACT,WAAW,CAACM,MAAM,CAACE,GAAR,CAAhB,EAA8B;AACnCR,iBAAW,CAACM,MAAM,CAACE,GAAR,CAAX,GAA0B,KAAI,CAACE,oBAAL,CAA0BJ,MAA1B,CAA1B;AACD;;AAED,WAAON,WAAW,CAACM,MAAM,CAACE,GAAR,CAAlB;AACD,GAzBH;;AAAA,gDAgCyB,UAACF,MAAD,EAAY;AAAA,QACzBK,UADyB,GACgBL,MADhB,CACzBK,UADyB;AAAA,QACbC,UADa,GACgBN,MADhB,CACbM,UADa;AAAA,QACEC,SADF,4BACgBP,MADhB;;AAEjC,QAAME,GAAG,GAAGK,SAAS,CAACL,GAAtB;AACA,WAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,aAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,SAAS,CAACL,GAAzC,EADsC,CAEtC;;AACA,UAAIA,GAAG,CAACW,OAAJ,CAAY,WAAZ,MAA6B,CAAC,CAAlC,EAAqC;AACnCjB,uCAAA,GAAwB,IAAxB;AACAA,wCAAA,GAAyB,IAAzB;AACAA,iDAAA,GAAkC,IAAlC;AACD;;AAED,UAAMkB,WAAW,GAAGlB,8BAAA,CAAqBW,SAArB,CAApB;AACAO,iBAAW,CAACT,UAAZ,GAAyBA,UAAzB;AACAS,iBAAW,CAACR,UAAZ,GAAyBA,UAAzB;AAEAQ,iBAAW,CAACC,OAAZ,CAAoBC,IAApB,CACE,UAACC,MAAD,EAAY;AACVN,eAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BZ,MAAM,CAACE,GAArC;AACAO,eAAO,CAACQ,MAAD,CAAP;AACD,OAJH,EAKE,UAACC,GAAD,EAAS;AACPP,eAAO,CAACQ,KAAR,CAAc,oBAAd,EAAoCnB,MAAM,CAACE,GAA3C,EAAgDgB,GAAhD;AACAR,cAAM,CAACQ,GAAD,CAAN;AACD,OARH;AAUD,KAvBM,CAAP;AAwBD,GA3DH;AAAA;AA8DAE,MAAM,CAACC,UAAP,GAAoB,IAAI1B,WAAJ,EAApB,C","file":"pdfjs-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"pdfjsLib\"), require(\"pdfjsViewer\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"pdfjsLib\", \"pdfjsViewer\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"pdfjsLib\"), require(\"pdfjsViewer\")) : factory(root[\"pdfjsLib\"], root[\"pdfjsViewer\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__544__, __WEBPACK_EXTERNAL_MODULE__231__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__544__;","module.exports = __WEBPACK_EXTERNAL_MODULE__231__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as pdfjsLib from \"pdfjs-dist/webpack\";\nimport { AnnotationLayerBuilder } from \"pdfjs-dist/lib/web/annotation_layer_builder\";\nimport { DefaultTextLayerFactory } from \"pdfjs-dist/lib/web/text_layer_builder\";\nimport { TextLayerBuilder } from \"pdfjs-dist/lib/web/text_layer_builder\";\nimport { PDFPageView } from \"pdfjs-dist/lib/web/pdf_page_view\";\n\nconst docPromises = [];\n\nexport class PDFJsFacade {\n  lib = pdfjsLib;\n  viewer = {\n    AnnotationLayerBuilder,\n    DefaultTextLayerFactory,\n    TextLayerBuilder,\n  };\n\n  getNewPDFPageView = (params = {}) => {\n    return new PDFPageView(params);\n  };\n\n  /**\n   * Loads a PDF doc with session cache support.\n   * @param {{onProgress?:function, onPassword?:function, url:string}} params\n   * @returns Promise\n   */\n  getDocument = (params = {}) => {\n    if (params.url == null) {\n      throw new Error(\"[pdfjs] Missing url parameter\");\n    } else if (!docPromises[params.url]) {\n      docPromises[params.url] = this.createDocLoadingTask(params);\n    }\n\n    return docPromises[params.url];\n  };\n\n  /**\n   * Creates the Promise that loads a PDF document\n   * @param {{onProgress?:function, onPassword?:function, url:string}} params\n   * @returns Promise\n   */\n  createDocLoadingTask = (params) => {\n    const { onPassword, onProgress, ...getParams } = params;\n    const url = getParams.url;\n    return new Promise((resolve, reject) => {\n      console.log(\"[pdfjs] Loading\", getParams.url);\n      // Disabling range request for the private document\n      if (url.indexOf(\"/private/\") !== -1) {\n        pdfjsLib.disableRange = true;\n        pdfjsLib.disableStream = true;\n        pdfjsLib.disableCreateObjectURL = true;\n      }\n\n      const loadingTask = pdfjsLib.getDocument(getParams);\n      loadingTask.onPassword = onPassword;\n      loadingTask.onProgress = onProgress;\n\n      loadingTask.promise.then(\n        (pdfDoc) => {\n          console.log(\"[pdfjs] Loaded\", params.url);\n          resolve(pdfDoc);\n        },\n        (err) => {\n          console.error(\"[pdfjs] Load error\", params.url, err);\n          reject(err);\n        }\n      );\n    });\n  };\n}\n\nwindow.rtPDFJsLib = new PDFJsFacade();\n"],"sourceRoot":""}